
CREATE TABLE SPONSORS (
    SPONSOR_ID int PRIMARY KEY NOT NULL AUTO_INCREMENT,
    PT_VALUE float,
    NAME varchar(255),
    DESCRIPTION varchar(255),
    CREATION_DATE datetime,
    CAT_EXPLICIT TINYINT,
    CAT_MEDIA_TYPE varchar(11)
);

CREATE TABLE ACCOUNTS (
	ACCOUNT_ID int PRIMARY KEY NOT NULL AUTO_INCREMENT,
    NAME varchar(255),
    ADDRESS varchar(255),
    CREATION_DATE datetime,
    STATUS ENUM('active', 'inactive', 'deleted'),
    LAST_LOGIN datetime,
    ACCOUNT_TYPE ENUM('driver', 'sponsor', 'admin'),
    NUM_POINTS int,
    BIRTHDAY date,
    USERNAME varchar(255),
    EMAIL varchar(255),
    BIO varchar(255),
    PASSWORD varchar(255),
    FAILED_ATTEMPTS int,
    LOCKOUT_UNTIL datetime,
    MFA_KEY varchar(32)
);

CREATE TABLE ACCOUNT_SPONSOR (
    ACC_SPONSOR_ID int PRIMARY KEY NOT NULL AUTO_INCREMENT,
    ACCOUNT_ID int,
    SPONSOR_ID int,
    NUM_POINTS int,
    STATUS ENUM('open', 'accepted', 'rejected', 'inactive'),
    HIRING_DESC varchar(255),
    REJECT_DESC varchar(255),
    APP_DATE datetime,
    FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNTS(ACCOUNT_ID),
    FOREIGN KEY (SPONSOR_ID) REFERENCES SPONSORS(SPONSOR_ID)
);

CREATE TABLE CATALOG (
    CATALOG_ID int NOT NULL AUTO_INCREMENT PRIMARY KEY,
    CAT_SPONSOR_ID int NOT NULL,
    ITEM_ID int NOT NULL,
    FOREIGN KEY (CAT_SPONSOR_ID) REFERENCES SPONSORS(SPONSOR_ID)
);

-- CREATE TABLE APPLICATIONS (
--     APPLICATION_ID int PRIMARY KEY NOT NULL AUTO_INCREMENT,
--     APP_ACCOUNT_ID int NOT NULL,
--     APP_SPONSOR_ID int NOT NULL,
--     HIRING_DESC varchar(255),
--     APP_CREATE_DATE datetime,
--     APP_STATUS ENUM('open', 'accepted', 'rejected'),
--     FOREIGN KEY (APP_ACCOUNT_ID) REFERENCES ACCOUNTS(ACCOUNT_ID),
--     FOREIGN KEY (APP_SPONSOR_ID) REFERENCES SPONSORS(SPONSOR_ID)
-- );

CREATE TABLE AUDIT (
    EVENT_ID int PRIMARY KEY NOT NULL AUTO_INCREMENT,
    AUDIT_SPONSOR_ID int,
    AUDIT_ACCOUNT_ID int,
    EVENT_TYPE varchar(255),
    -- need a datetime field
    DESCRIPTION varchar(255),
    EVENT_TIME datetime
    -- doesnt need to be fk
    -- FOREIGN KEY (AUDIT_SPONSOR_ID) REFERENCES SPONSORS(SPONSOR_ID),
    -- FOREIGN KEY (AUDIT_ACCOUNT_ID) REFERENCES ACCOUNTS(ACCOUNT_ID)
);

CREATE TABLE POINT_HISTORY (
    HISTORY_ID int PRIMARY KEY NOT NULL AUTO_INCREMENT,
    POINT_CHANGE int,
    POINT_CHANGE_DATE datetime,
    STATUS ENUM('completed', 'in_progress', 'cancelled', 'refunded'),
    ITEM_ID int,
    HIST_ACC_SPONSOR_ID int,
    FOREIGN KEY (HIST_ACC_SPONSOR_ID) REFERENCES ACCOUNT_SPONSOR(ACC_SPONSOR_ID),
    SOURCE ENUM('ORDER', 'SPONSOR'),
    REASON varchar(255),
    SPONSOR_USER_ID int
);

CREATE TABLE NOTIFICATIONS (
    ACCOUNT_ID INT NOT NULL,
    ORDER_ERROR_ENABLED TINYINT(1) DEFAULT 1,  
    ORDER_PLACED_ENABLED TINYINT(1) DEFAULT 1, 
    POINTS_ADDED_ENABLED TINYINT(1) DEFAULT 1,
    PRIMARY KEY (ACCOUNT_ID),
    FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNTS(ACCOUNT_ID) ON DELETE CASCADE
);